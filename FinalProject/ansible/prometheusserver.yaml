---
- hosts: ops_server
  become: true
  vars_files:
    - variables.yaml

  tasks:
  
  - name: "add usergroup"
    group:
      name: prometheus
      system: yes
      state: present

  - name: "add user"
    user:
      name: prometheus
      group: prometheus
      groups: prometheus
      shell: /sbin/nologin
      system: yes
      state: present

  - name: "make db directory"
    file:
      path: "{{ prometheus_db_dir }}"
      state: directory
      group: prometheus
      owner: prometheus
      mode: 0755

  - name: "make config directory"
    file:
      path: "{{ item }}"
      state: directory
      group: prometheus
      owner: root
      mode: 0770
    with_items:
      - "{{ prometheus_config_dir }}"
      - "{{ prometheus_config_dir }}/rules"
      - "{{ prometheus_config_dir }}/file_sd"


  - block:
    - name: download prometheus binary to local folder
      become: false
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.{{ os_arch }}.tar.gz"
        dest: "/tmp/prometheus-{{ prometheus_version }}.{{ os_arch }}.tar.gz"
        checksum: "sha256:{{ prometheus_checksum }}"
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      # delegate_to: localhost
      check_mode: false

    - name: unpack prometheus binaries
      become: false
      unarchive:
        src: "/tmp/prometheus-{{ prometheus_version }}.{{ os_arch }}.tar.gz"
        remote_src: yes
        dest: "/tmp"
        creates: "/tmp/prometheus-{{ prometheus_version }}.{{ os_arch }}/prometheus"
      # delegate_to: localhost
      check_mode: false

    - name: propagate official prometheus and promtool binaries
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.{{ os_arch }}/{{ item }}"
        remote_src: yes
        dest: "{{ prometheus_binary_install_dir }}/{{ item }}"
        mode: 0755
        owner: root
        group: root
      with_items:
        - prometheus
        - promtool
      notify:
        - restart prometheus

    - name: propagate official console templates
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.{{ os_arch }}/{{ item }}/"
        remote_src: yes
        dest: "{{ prometheus_config_dir }}/{{ item }}/"
        mode: 0644
        owner: root
        group: root
      with_items:
        - console_libraries
        - consoles
      notify:
        - restart prometheus

    - name: create systemd service unit
      template:
        src: prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
        owner: root
        group: root
        mode: 0644
      notify:
        - restart prometheus
  
    - name: propagate prometheus config
      template:
        src: prometheus.yml.j2
        dest: "{{ prometheus_config_dir }}/prometheus.yml"
        mode: 0755
        owner: prometheus
        group: prometheus
      notify:
        - reload prometheus

    - name: "run prometheus"
      service:
        name: prometheus
        state: started
        enabled: yes

  handlers:
    
    - name: restart prometheus
      become: true
      systemd:
        daemon_reload: true
        name: prometheus
        state: restarted

    - name: reload prometheus
      become: true
      systemd:
        name: prometheus
        state: reloaded
